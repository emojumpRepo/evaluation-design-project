# 构建阶段 - 优化版本，使用缓存和并行安装
FROM node:18-alpine AS builder

WORKDIR /app

# 设置npm镜像源为淘宝镜像（阿里云镜像）
RUN npm config set registry https://registry.npmmirror.com && \
    npm config set disturl https://npmmirror.com/dist && \
    npm config set electron_mirror https://npmmirror.com/mirrors/electron/ && \
    npm config set sass_binary_site https://npmmirror.com/mirrors/node-sass/ && \
    npm config set phantomjs_cdnurl https://npmmirror.com/mirrors/phantomjs/

# 首先只复制package.json文件，利用Docker层缓存
COPY web/package.json ./web/package.json
COPY server/package.json ./server/package.json

# 安装依赖（如果package.json没变，这一层会被缓存）
RUN cd web && npm ci --registry=https://registry.npmmirror.com --loglevel=error || npm install --registry=https://registry.npmmirror.com --loglevel=error

RUN cd server && npm ci --registry=https://registry.npmmirror.com --loglevel=error || npm install --registry=https://registry.npmmirror.com --loglevel=error

# 复制源代码
COPY web ./web
COPY server ./server

# 构建项目
RUN cd web && npm run build && \
    cd ../server && npm run build

# 运行阶段
FROM node:18-alpine

# 安装nginx和必要工具
RUN apk add --no-cache nginx && \
    npm config set registry https://registry.npmmirror.com

WORKDIR /app

# 复制构建产物
COPY --from=builder /app/web/dist ./web/dist
COPY --from=builder /app/server/dist ./server/dist
COPY --from=builder /app/server/node_modules ./server/node_modules
COPY --from=builder /app/server/package*.json ./server/

# 复制nginx配置
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# 确保文件权限正确
RUN chmod -R 755 /app/web/dist

# 创建启动脚本
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "Starting nginx..."' >> /app/start.sh && \
    echo 'nginx' >> /app/start.sh && \
    echo 'echo "Starting Node.js server..."' >> /app/start.sh && \
    echo 'cd /app/server && node dist/main.js' >> /app/start.sh && \
    chmod +x /app/start.sh

EXPOSE 8080

CMD ["/app/start.sh"]